// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
  moduleFormat = "esm"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums (allowed values)
enum PlanType {
  DESTINATION_KNOWN
  DESTINATION_UNKNOWN
}

enum PlanStatus {
  COMPLETED
  ERROR
  DRAFT
}


//  DB models

model User {
  id Int @id @default(autoincrement())
  first_name String
  email String @unique
  password String
  login_count Int @default(0)
  last_login DateTime?
  // Verify that I'll be using this:
  email_verified Boolean @default(false) 
  created_at DateTime @default(now())
  plan Plan[]
  planShares PlanShares[]
}

model Plan {
  id Int @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
  plan_type PlanType
  status PlanStatus @default(DRAFT)
  plan_data Json?
  photos_first_destination String[] @default([])
  photos_second_destination String[] @default([])
  is_paid Boolean @default(false)
  order_id String?
  created_at DateTime @default(now())
  was_modified Boolean @default(false)
  userResponse UserResponse[]
  planShares PlanShares[]
  // Note: Image S3 URL is stored in result_data Json object
}

// Table to handle plans that are shared with other people via email addresses
model PlanShares {
  id Int @id @default(autoincrement())
  plan Plan @relation(fields: [plan_id], references: [id])
  plan_id Int
  email String
  invited_by_user_id Int
  user User @relation(fields: [invited_by_user_id], references: [id])
  created_at DateTime @default(now())
  @@unique([plan_id, email]) // ensures that no one can share a plan with an email twice
}

model UserResponse {
  id Int @id @default(autoincrement())
  plan Plan @relation(fields: [plan_id], references: [id])
  plan_id Int
  user_question_response_data Json
}

